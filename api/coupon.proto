syntax = "proto3";

package coupon;

option go_package = "github.com/chisdev/coupon/api;coupon";

import "validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service Coupon {
    rpc ListCouponForCustomer (ListCouponForCustomerRequest) returns (ListCouponForCustomerResponse) {
        option (google.api.http) = {
            get: "/coupon/customer/list"
        };
    };

    rpc ListCouponForCms (ListCouponForCmsRequest) returns (ListCouponForCmsResponse) {
        option (google.api.http) = {
            get: "/coupon/cms/list"
        };
    };

    // rpc ListProgress (ListProgressRequest) returns (ListProgressResponse) {
    //     option (google.api.http) = {
    //         get: "/coupon/progress"
    //     };
    // } 

    rpc ListCurrency (ListCurrencyRequest) returns (ListCurrencyResponse) {
          option (google.api.http) = {
            get: "/coupon/currency"
        };
    }

        rpc CreateMileStone (CreateMileStoneRequest) returns (CreateMileStoneResponse) {
      option (google.api.http) = {
        post: "/coupon/milestone"
        body: "*"
      };
    }

    rpc ListMileStone (ListMileStoneRequest) returns (ListMileStoneResponse) {
      option (google.api.http) = {
        get: "/coupon/milestone"
      };
    }
 
    rpc DeleteMileStone (DeleteMileStoneRequest) returns (google.protobuf.Empty)
    {
         option (google.api.http) = {
            post: "/coupon/milestone/delete"
            body: "*"   
        };
    };


    rpc CreateCoupon (CreateCouponRequest) returns (CreateCouponResponse) {
      option (google.api.http) = {
        post: "/coupon/create"
        body: "*"
      };
    }

    rpc DeleteCoupon (DeleteCouponRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        post: "/coupon/delete"
        body: "*"
      };
    }
}



service CouponInternal {
    rpc ReserveCoupon (ReserveCouponRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/couponint/reserve"
            body: "*"
        };
    };

    rpc UnReserveCoupon (UnReserveCouponRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/couponint/unreserve"
            body: "*"
        };
    };

    rpc ConfirmCouponUsage (ConfirmCouponUsageRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/couponint/confirm-usage"
            body: "*"
        };
    };

    rpc AddPoint (AddPointRequest) returns (google.protobuf.Empty);
    
}

enum CouponUsedStatus {
    COUPON_USED_STATUS_UNKNOWN = 0;
    COUPON_USED_STATUS_RESERVED = 1;
    COUPON_USED_STATUS_USED = 2;
}

enum SortType {
    SORT_TYPE_UNKNOWN = 0;
    SORT_TYPE_ASC =  1;
    SORT_TYPE_DESC = 2;
}

enum CouponType {
    COUPON_TYPE_UNKNOWN = 0;
    COUPON_TYPE_PERCENTAGE = 1;
    COUPON_TYPE_FIXED = 2;
}   

enum CouponStatus {
    COUPON_STATUS_UNKNOWN = 0;
    COUPON_STATUS_ACTIVE  = 1;
    COUPON_STATUS_USED  = 2;
    COUPON_STATUS_EXPIRED  = 3;
    COUPON_STATUS_DISABLED  = 4;
}

enum MilestoneType {
    MILESTONE_TYPE_UNKNOWN = 0;
    MILESTONE_TYPE_FIXED = 1;
    MILESTONE_TYPE_RECURRING  = 2;
}

message SortMethod {
    string name = 1 [
      (validate.rules).string = {
        min_len: 1
      }
    ];
    SortType type = 2;
}


message Reward {
    uint64 id = 1;
    double coupon_value = 2;
    optional double expired_duration = 3;
    optional uint64 currency_id = 4;
    optional int32 usage_limit = 5;
    uint64 milestone_id = 6;
    CouponType coupon_type = 7;
    repeated uint64 service_ids = 8;
}

message Milestone {
    uint64 id = 1;
    MilestoneType type = 2;
    optional int32 threshold = 3;
    optional int32 step = 4;
    string store_id = 5;
    repeated Reward  rewards = 6;
}

message StoreCoupon {
    uint64 id = 1;
    string code =  2;
    string store_id = 3;
    optional google.protobuf.Timestamp expired_at = 4;
    optional string customer_id = 5;
    repeated string service_ids = 6;
    optional uint64 currency_id = 7;
    CouponType coupon_type = 8;
    CouponStatus status = 9;
    optional int32 usage_limit = 10;
    int32 used_count = 11;
    int32 reserved_count = 12;
    repeated CouponUsage coupon_usages = 13;
    double coupon_value = 14;
}

message CouponUsage {
    uint64 id = 1;
    string booking_id = 2;
    repeated  string service_ids = 3;
    optional string customer_id = 4;
    CouponUsedStatus status = 5;
    optional google.protobuf.Timestamp reserved_at = 6;
    optional google.protobuf.Timestamp used_at = 7;
}

message Proress {
    uint64  milestone_id = 1;
    int32   progress = 2;
    int32   pass_count = 3;
}

message MilestoneProgress {
    Milestone Milestone = 1;
    int32 progress = 2;
}

message CreateMileStoneRequest {
    string name = 1 [(validate.rules).string = {min_len: 1}];
    optional int32 threshold = 2;
    optional int32 step = 3;
    repeated MilestoneReward rewards = 4;
    message MilestoneReward {
        double coupon_value = 1;
        optional double expired_duration = 2;
        optional uint64 currency_id = 3;
        optional int32 usage_limit = 4;
        uint64 milestone_id = 5;
        repeated uint64 service_ids = 6;
    }
}

message Currency  {
    uint64 id = 1;
    string name = 2;
    string code = 3;
}

message CreateMileStoneResponse {
    Milestone milestone = 1;
}

message GetMileStoneRequest{
    uint64 id = 1;
}

message GetMileStoneResponse {
    Milestone milestone = 1;
}

message ListMileStoneRequest {
    int32 page_index = 1 [(validate.rules).int32 = {gte: 0}];
    int32 page_size = 2 [(validate.rules).int32 = {gte: 0}];
    repeated SortMethod sort_methods = 3;
    repeated string store_ids = 4;
}

message ListMileStoneResponse {
    repeated Milestone milestones = 1;
    int32 total_count = 2;
    int32 total_pages = 3;
    ListMileStoneRequest request = 4;
}

message DeleteMileStoneRequest {
    repeated uint64 ids = 1;
}

message ReserveCouponRequest {
    string code = 1 [(validate.rules).string = {min_len: 1}];
    string booking_id = 2;
    repeated string service_ids = 3;    
    optional string customer_id = 4;
    string store_id = 6;
}

message UnReserveCouponRequest {
    string booking_id = 1;
    string store_id = 2;
}

message ConfirmCouponUsageRequest {
    string booking_id = 1;
    string store_id = 2;
}

message AddPointRequest {
    int32 points = 1;
    string customer_id = 2;
    string store_id = 3;
}

message ListCouponForCustomerRequest {
    int32 page_index = 1 [(validate.rules).int32 = {gte: 0}];
    int32 page_size = 2 [(validate.rules).int32 = {gte: 0}];
    repeated SortMethod sort_methods = 3;
    repeated string store_id = 4;
    repeated string service_ids = 5;
    CouponStatus status = 6;
}

message ListCouponForCustomerResponse {
    repeated StoreCoupon coupons = 1;
    int32 total_count = 2;
    int32 total_pages = 3;
    ListCouponForCustomerRequest request = 4;
}

message ListCouponForCmsRequest {
    int32 page_index = 1 [(validate.rules).int32 = {gte: 0}];
    int32 page_size = 2 [(validate.rules).int32 = {gte: 0}];
    repeated SortMethod sort_methods = 3;
    repeated string customer_ids = 4;
    repeated string service_ids = 5;
    CouponStatus status = 6;
}

message ListCouponForCmsResponse {
    repeated StoreCoupon coupons = 1;
    int32 total_count = 2;
    int32 total_pages = 3;
    ListCouponForCmsRequest request = 4;
}

message ListProgressRequest {
    repeated string store_ids = 1;
    int32 page_index = 2;
    int32 page_size = 3;
    repeated SortMethod sort_methods = 4;
}


message ListProgressResponse {
    repeated Proress  progress_list = 1;
    int32 total_page = 2;
    int32 total_count = 3;
    ListProgressRequest request = 4;
}

message ListCurrencyRequest {
    string search_content = 1;
    int32 page_index = 2;
    int32 page_size = 3;
    repeated SortMethod sort_methods = 4;
}

message ListCurrencyResponse {
    repeated Currency  currencies = 1;
    int32 total_page = 2;
    int32 total_count = 3;
    ListProgressRequest request = 4;
}

message CreateCouponRequest {
    optional double expired_duration = 1;
    optional string customer_id = 2;
    repeated string service_ids = 3;
    optional uint64 currency_id = 4;
    optional int32 usage_limit = 5;
    double coupon_value = 6;
}

message CreateCouponResponse {
    StoreCoupon coupon = 1;
}   

message DeleteCouponRequest {
    repeated uint64 ids = 1;    
}