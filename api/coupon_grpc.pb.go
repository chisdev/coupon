// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: coupon/api/coupon.proto

package coupon

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	Coupon_ListCouponForCustomer_FullMethodName = "/coupon.Coupon/ListCouponForCustomer"
	Coupon_ListCouponForCms_FullMethodName      = "/coupon.Coupon/ListCouponForCms"
	Coupon_ListCurrency_FullMethodName          = "/coupon.Coupon/ListCurrency"
	Coupon_CreateMileStone_FullMethodName       = "/coupon.Coupon/CreateMileStone"
	Coupon_ListMileStone_FullMethodName         = "/coupon.Coupon/ListMileStone"
	Coupon_DeleteMileStone_FullMethodName       = "/coupon.Coupon/DeleteMileStone"
	Coupon_CreateCoupon_FullMethodName          = "/coupon.Coupon/CreateCoupon"
	Coupon_DeleteCoupon_FullMethodName          = "/coupon.Coupon/DeleteCoupon"
)

// CouponClient is the client API for Coupon service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponClient interface {
	ListCouponForCustomer(ctx context.Context, in *ListCouponForCustomerRequest, opts ...grpc.CallOption) (*ListCouponForCustomerResponse, error)
	ListCouponForCms(ctx context.Context, in *ListCouponForCmsRequest, opts ...grpc.CallOption) (*ListCouponForCmsResponse, error)
	ListCurrency(ctx context.Context, in *ListCurrencyRequest, opts ...grpc.CallOption) (*ListCurrencyResponse, error)
	CreateMileStone(ctx context.Context, in *CreateMileStoneRequest, opts ...grpc.CallOption) (*CreateMileStoneResponse, error)
	ListMileStone(ctx context.Context, in *ListMileStoneRequest, opts ...grpc.CallOption) (*ListMileStoneResponse, error)
	DeleteMileStone(ctx context.Context, in *DeleteMileStoneRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CreateCoupon(ctx context.Context, in *CreateCouponRequest, opts ...grpc.CallOption) (*CreateCouponResponse, error)
	DeleteCoupon(ctx context.Context, in *DeleteCouponRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type couponClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponClient(cc grpc.ClientConnInterface) CouponClient {
	return &couponClient{cc}
}

func (c *couponClient) ListCouponForCustomer(ctx context.Context, in *ListCouponForCustomerRequest, opts ...grpc.CallOption) (*ListCouponForCustomerResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCouponForCustomerResponse)
	err := c.cc.Invoke(ctx, Coupon_ListCouponForCustomer_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ListCouponForCms(ctx context.Context, in *ListCouponForCmsRequest, opts ...grpc.CallOption) (*ListCouponForCmsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCouponForCmsResponse)
	err := c.cc.Invoke(ctx, Coupon_ListCouponForCms_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ListCurrency(ctx context.Context, in *ListCurrencyRequest, opts ...grpc.CallOption) (*ListCurrencyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCurrencyResponse)
	err := c.cc.Invoke(ctx, Coupon_ListCurrency_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) CreateMileStone(ctx context.Context, in *CreateMileStoneRequest, opts ...grpc.CallOption) (*CreateMileStoneResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateMileStoneResponse)
	err := c.cc.Invoke(ctx, Coupon_CreateMileStone_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) ListMileStone(ctx context.Context, in *ListMileStoneRequest, opts ...grpc.CallOption) (*ListMileStoneResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListMileStoneResponse)
	err := c.cc.Invoke(ctx, Coupon_ListMileStone_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) DeleteMileStone(ctx context.Context, in *DeleteMileStoneRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Coupon_DeleteMileStone_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) CreateCoupon(ctx context.Context, in *CreateCouponRequest, opts ...grpc.CallOption) (*CreateCouponResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateCouponResponse)
	err := c.cc.Invoke(ctx, Coupon_CreateCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponClient) DeleteCoupon(ctx context.Context, in *DeleteCouponRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Coupon_DeleteCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponServer is the server API for Coupon service.
// All implementations must embed UnimplementedCouponServer
// for forward compatibility.
type CouponServer interface {
	ListCouponForCustomer(context.Context, *ListCouponForCustomerRequest) (*ListCouponForCustomerResponse, error)
	ListCouponForCms(context.Context, *ListCouponForCmsRequest) (*ListCouponForCmsResponse, error)
	ListCurrency(context.Context, *ListCurrencyRequest) (*ListCurrencyResponse, error)
	CreateMileStone(context.Context, *CreateMileStoneRequest) (*CreateMileStoneResponse, error)
	ListMileStone(context.Context, *ListMileStoneRequest) (*ListMileStoneResponse, error)
	DeleteMileStone(context.Context, *DeleteMileStoneRequest) (*emptypb.Empty, error)
	CreateCoupon(context.Context, *CreateCouponRequest) (*CreateCouponResponse, error)
	DeleteCoupon(context.Context, *DeleteCouponRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedCouponServer()
}

// UnimplementedCouponServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCouponServer struct{}

func (UnimplementedCouponServer) ListCouponForCustomer(context.Context, *ListCouponForCustomerRequest) (*ListCouponForCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCouponForCustomer not implemented")
}
func (UnimplementedCouponServer) ListCouponForCms(context.Context, *ListCouponForCmsRequest) (*ListCouponForCmsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCouponForCms not implemented")
}
func (UnimplementedCouponServer) ListCurrency(context.Context, *ListCurrencyRequest) (*ListCurrencyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCurrency not implemented")
}
func (UnimplementedCouponServer) CreateMileStone(context.Context, *CreateMileStoneRequest) (*CreateMileStoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMileStone not implemented")
}
func (UnimplementedCouponServer) ListMileStone(context.Context, *ListMileStoneRequest) (*ListMileStoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMileStone not implemented")
}
func (UnimplementedCouponServer) DeleteMileStone(context.Context, *DeleteMileStoneRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMileStone not implemented")
}
func (UnimplementedCouponServer) CreateCoupon(context.Context, *CreateCouponRequest) (*CreateCouponResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCoupon not implemented")
}
func (UnimplementedCouponServer) DeleteCoupon(context.Context, *DeleteCouponRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCoupon not implemented")
}
func (UnimplementedCouponServer) mustEmbedUnimplementedCouponServer() {}
func (UnimplementedCouponServer) testEmbeddedByValue()                {}

// UnsafeCouponServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponServer will
// result in compilation errors.
type UnsafeCouponServer interface {
	mustEmbedUnimplementedCouponServer()
}

func RegisterCouponServer(s grpc.ServiceRegistrar, srv CouponServer) {
	// If the following call pancis, it indicates UnimplementedCouponServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&Coupon_ServiceDesc, srv)
}

func _Coupon_ListCouponForCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCouponForCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ListCouponForCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ListCouponForCustomer_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ListCouponForCustomer(ctx, req.(*ListCouponForCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ListCouponForCms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCouponForCmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ListCouponForCms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ListCouponForCms_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ListCouponForCms(ctx, req.(*ListCouponForCmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ListCurrency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCurrencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ListCurrency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ListCurrency_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ListCurrency(ctx, req.(*ListCurrencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_CreateMileStone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMileStoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).CreateMileStone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_CreateMileStone_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).CreateMileStone(ctx, req.(*CreateMileStoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_ListMileStone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMileStoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).ListMileStone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_ListMileStone_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).ListMileStone(ctx, req.(*ListMileStoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_DeleteMileStone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMileStoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).DeleteMileStone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_DeleteMileStone_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).DeleteMileStone(ctx, req.(*DeleteMileStoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_CreateCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).CreateCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_CreateCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).CreateCoupon(ctx, req.(*CreateCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Coupon_DeleteCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponServer).DeleteCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Coupon_DeleteCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponServer).DeleteCoupon(ctx, req.(*DeleteCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Coupon_ServiceDesc is the grpc.ServiceDesc for Coupon service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Coupon_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "coupon.Coupon",
	HandlerType: (*CouponServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCouponForCustomer",
			Handler:    _Coupon_ListCouponForCustomer_Handler,
		},
		{
			MethodName: "ListCouponForCms",
			Handler:    _Coupon_ListCouponForCms_Handler,
		},
		{
			MethodName: "ListCurrency",
			Handler:    _Coupon_ListCurrency_Handler,
		},
		{
			MethodName: "CreateMileStone",
			Handler:    _Coupon_CreateMileStone_Handler,
		},
		{
			MethodName: "ListMileStone",
			Handler:    _Coupon_ListMileStone_Handler,
		},
		{
			MethodName: "DeleteMileStone",
			Handler:    _Coupon_DeleteMileStone_Handler,
		},
		{
			MethodName: "CreateCoupon",
			Handler:    _Coupon_CreateCoupon_Handler,
		},
		{
			MethodName: "DeleteCoupon",
			Handler:    _Coupon_DeleteCoupon_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupon/api/coupon.proto",
}

const (
	CouponInternal_ReserveCoupon_FullMethodName      = "/coupon.CouponInternal/ReserveCoupon"
	CouponInternal_UnReserveCoupon_FullMethodName    = "/coupon.CouponInternal/UnReserveCoupon"
	CouponInternal_ConfirmCouponUsage_FullMethodName = "/coupon.CouponInternal/ConfirmCouponUsage"
	CouponInternal_AddPoint_FullMethodName           = "/coupon.CouponInternal/AddPoint"
)

// CouponInternalClient is the client API for CouponInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponInternalClient interface {
	ReserveCoupon(ctx context.Context, in *ReserveCouponRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UnReserveCoupon(ctx context.Context, in *UnReserveCouponRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ConfirmCouponUsage(ctx context.Context, in *ConfirmCouponUsageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AddPoint(ctx context.Context, in *AddPointRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type couponInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponInternalClient(cc grpc.ClientConnInterface) CouponInternalClient {
	return &couponInternalClient{cc}
}

func (c *couponInternalClient) ReserveCoupon(ctx context.Context, in *ReserveCouponRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CouponInternal_ReserveCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponInternalClient) UnReserveCoupon(ctx context.Context, in *UnReserveCouponRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CouponInternal_UnReserveCoupon_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponInternalClient) ConfirmCouponUsage(ctx context.Context, in *ConfirmCouponUsageRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CouponInternal_ConfirmCouponUsage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponInternalClient) AddPoint(ctx context.Context, in *AddPointRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CouponInternal_AddPoint_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponInternalServer is the server API for CouponInternal service.
// All implementations must embed UnimplementedCouponInternalServer
// for forward compatibility.
type CouponInternalServer interface {
	ReserveCoupon(context.Context, *ReserveCouponRequest) (*emptypb.Empty, error)
	UnReserveCoupon(context.Context, *UnReserveCouponRequest) (*emptypb.Empty, error)
	ConfirmCouponUsage(context.Context, *ConfirmCouponUsageRequest) (*emptypb.Empty, error)
	AddPoint(context.Context, *AddPointRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedCouponInternalServer()
}

// UnimplementedCouponInternalServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCouponInternalServer struct{}

func (UnimplementedCouponInternalServer) ReserveCoupon(context.Context, *ReserveCouponRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReserveCoupon not implemented")
}
func (UnimplementedCouponInternalServer) UnReserveCoupon(context.Context, *UnReserveCouponRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnReserveCoupon not implemented")
}
func (UnimplementedCouponInternalServer) ConfirmCouponUsage(context.Context, *ConfirmCouponUsageRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmCouponUsage not implemented")
}
func (UnimplementedCouponInternalServer) AddPoint(context.Context, *AddPointRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPoint not implemented")
}
func (UnimplementedCouponInternalServer) mustEmbedUnimplementedCouponInternalServer() {}
func (UnimplementedCouponInternalServer) testEmbeddedByValue()                        {}

// UnsafeCouponInternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponInternalServer will
// result in compilation errors.
type UnsafeCouponInternalServer interface {
	mustEmbedUnimplementedCouponInternalServer()
}

func RegisterCouponInternalServer(s grpc.ServiceRegistrar, srv CouponInternalServer) {
	// If the following call pancis, it indicates UnimplementedCouponInternalServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CouponInternal_ServiceDesc, srv)
}

func _CouponInternal_ReserveCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInternalServer).ReserveCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInternal_ReserveCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInternalServer).ReserveCoupon(ctx, req.(*ReserveCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponInternal_UnReserveCoupon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnReserveCouponRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInternalServer).UnReserveCoupon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInternal_UnReserveCoupon_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInternalServer).UnReserveCoupon(ctx, req.(*UnReserveCouponRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponInternal_ConfirmCouponUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmCouponUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInternalServer).ConfirmCouponUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInternal_ConfirmCouponUsage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInternalServer).ConfirmCouponUsage(ctx, req.(*ConfirmCouponUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponInternal_AddPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPointRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponInternalServer).AddPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponInternal_AddPoint_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponInternalServer).AddPoint(ctx, req.(*AddPointRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CouponInternal_ServiceDesc is the grpc.ServiceDesc for CouponInternal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CouponInternal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "coupon.CouponInternal",
	HandlerType: (*CouponInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReserveCoupon",
			Handler:    _CouponInternal_ReserveCoupon_Handler,
		},
		{
			MethodName: "UnReserveCoupon",
			Handler:    _CouponInternal_UnReserveCoupon_Handler,
		},
		{
			MethodName: "ConfirmCouponUsage",
			Handler:    _CouponInternal_ConfirmCouponUsage_Handler,
		},
		{
			MethodName: "AddPoint",
			Handler:    _CouponInternal_AddPoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupon/api/coupon.proto",
}
