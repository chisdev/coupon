// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: coupon/api/coupon.proto

package coupon

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CouponUsedStatus int32

const (
	CouponUsedStatus_COUPON_USED_STATUS_UNKNOWN  CouponUsedStatus = 0
	CouponUsedStatus_COUPON_USED_STATUS_RESERVED CouponUsedStatus = 1
	CouponUsedStatus_COUPON_USED_STATUS_USED     CouponUsedStatus = 2
)

// Enum value maps for CouponUsedStatus.
var (
	CouponUsedStatus_name = map[int32]string{
		0: "COUPON_USED_STATUS_UNKNOWN",
		1: "COUPON_USED_STATUS_RESERVED",
		2: "COUPON_USED_STATUS_USED",
	}
	CouponUsedStatus_value = map[string]int32{
		"COUPON_USED_STATUS_UNKNOWN":  0,
		"COUPON_USED_STATUS_RESERVED": 1,
		"COUPON_USED_STATUS_USED":     2,
	}
)

func (x CouponUsedStatus) Enum() *CouponUsedStatus {
	p := new(CouponUsedStatus)
	*p = x
	return p
}

func (x CouponUsedStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CouponUsedStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_coupon_api_coupon_proto_enumTypes[0].Descriptor()
}

func (CouponUsedStatus) Type() protoreflect.EnumType {
	return &file_coupon_api_coupon_proto_enumTypes[0]
}

func (x CouponUsedStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CouponUsedStatus.Descriptor instead.
func (CouponUsedStatus) EnumDescriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{0}
}

type SortType int32

const (
	SortType_SORT_TYPE_UNKNOWN SortType = 0
	SortType_SORT_TYPE_ASC     SortType = 1
	SortType_SORT_TYPE_DESC    SortType = 2
)

// Enum value maps for SortType.
var (
	SortType_name = map[int32]string{
		0: "SORT_TYPE_UNKNOWN",
		1: "SORT_TYPE_ASC",
		2: "SORT_TYPE_DESC",
	}
	SortType_value = map[string]int32{
		"SORT_TYPE_UNKNOWN": 0,
		"SORT_TYPE_ASC":     1,
		"SORT_TYPE_DESC":    2,
	}
)

func (x SortType) Enum() *SortType {
	p := new(SortType)
	*p = x
	return p
}

func (x SortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortType) Descriptor() protoreflect.EnumDescriptor {
	return file_coupon_api_coupon_proto_enumTypes[1].Descriptor()
}

func (SortType) Type() protoreflect.EnumType {
	return &file_coupon_api_coupon_proto_enumTypes[1]
}

func (x SortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortType.Descriptor instead.
func (SortType) EnumDescriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{1}
}

type CouponType int32

const (
	CouponType_COUPON_TYPE_UNKNOWN    CouponType = 0
	CouponType_COUPON_TYPE_PERCENTAGE CouponType = 1
	CouponType_COUPON_TYPE_FIXED      CouponType = 2
)

// Enum value maps for CouponType.
var (
	CouponType_name = map[int32]string{
		0: "COUPON_TYPE_UNKNOWN",
		1: "COUPON_TYPE_PERCENTAGE",
		2: "COUPON_TYPE_FIXED",
	}
	CouponType_value = map[string]int32{
		"COUPON_TYPE_UNKNOWN":    0,
		"COUPON_TYPE_PERCENTAGE": 1,
		"COUPON_TYPE_FIXED":      2,
	}
)

func (x CouponType) Enum() *CouponType {
	p := new(CouponType)
	*p = x
	return p
}

func (x CouponType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CouponType) Descriptor() protoreflect.EnumDescriptor {
	return file_coupon_api_coupon_proto_enumTypes[2].Descriptor()
}

func (CouponType) Type() protoreflect.EnumType {
	return &file_coupon_api_coupon_proto_enumTypes[2]
}

func (x CouponType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CouponType.Descriptor instead.
func (CouponType) EnumDescriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{2}
}

type CouponStatus int32

const (
	CouponStatus_COUPON_STATUS_UNKNOWN  CouponStatus = 0
	CouponStatus_COUPON_STATUS_ACTIVE   CouponStatus = 1
	CouponStatus_COUPON_STATUS_USED     CouponStatus = 2
	CouponStatus_COUPON_STATUS_EXPIRED  CouponStatus = 3
	CouponStatus_COUPON_STATUS_DISABLED CouponStatus = 4
)

// Enum value maps for CouponStatus.
var (
	CouponStatus_name = map[int32]string{
		0: "COUPON_STATUS_UNKNOWN",
		1: "COUPON_STATUS_ACTIVE",
		2: "COUPON_STATUS_USED",
		3: "COUPON_STATUS_EXPIRED",
		4: "COUPON_STATUS_DISABLED",
	}
	CouponStatus_value = map[string]int32{
		"COUPON_STATUS_UNKNOWN":  0,
		"COUPON_STATUS_ACTIVE":   1,
		"COUPON_STATUS_USED":     2,
		"COUPON_STATUS_EXPIRED":  3,
		"COUPON_STATUS_DISABLED": 4,
	}
)

func (x CouponStatus) Enum() *CouponStatus {
	p := new(CouponStatus)
	*p = x
	return p
}

func (x CouponStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CouponStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_coupon_api_coupon_proto_enumTypes[3].Descriptor()
}

func (CouponStatus) Type() protoreflect.EnumType {
	return &file_coupon_api_coupon_proto_enumTypes[3]
}

func (x CouponStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CouponStatus.Descriptor instead.
func (CouponStatus) EnumDescriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{3}
}

type MilestoneType int32

const (
	MilestoneType_MILESTONE_TYPE_UNKNOWN   MilestoneType = 0
	MilestoneType_MILESTONE_TYPE_FIXED     MilestoneType = 1
	MilestoneType_MILESTONE_TYPE_RECURRING MilestoneType = 2
)

// Enum value maps for MilestoneType.
var (
	MilestoneType_name = map[int32]string{
		0: "MILESTONE_TYPE_UNKNOWN",
		1: "MILESTONE_TYPE_FIXED",
		2: "MILESTONE_TYPE_RECURRING",
	}
	MilestoneType_value = map[string]int32{
		"MILESTONE_TYPE_UNKNOWN":   0,
		"MILESTONE_TYPE_FIXED":     1,
		"MILESTONE_TYPE_RECURRING": 2,
	}
)

func (x MilestoneType) Enum() *MilestoneType {
	p := new(MilestoneType)
	*p = x
	return p
}

func (x MilestoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MilestoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_coupon_api_coupon_proto_enumTypes[4].Descriptor()
}

func (MilestoneType) Type() protoreflect.EnumType {
	return &file_coupon_api_coupon_proto_enumTypes[4]
}

func (x MilestoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MilestoneType.Descriptor instead.
func (MilestoneType) EnumDescriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{4}
}

type SortMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type SortType `protobuf:"varint,2,opt,name=type,proto3,enum=coupon.SortType" json:"type,omitempty"`
}

func (x *SortMethod) Reset() {
	*x = SortMethod{}
	mi := &file_coupon_api_coupon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortMethod) ProtoMessage() {}

func (x *SortMethod) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortMethod.ProtoReflect.Descriptor instead.
func (*SortMethod) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{0}
}

func (x *SortMethod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SortMethod) GetType() SortType {
	if x != nil {
		return x.Type
	}
	return SortType_SORT_TYPE_UNKNOWN
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CouponValue     float64    `protobuf:"fixed64,2,opt,name=coupon_value,json=couponValue,proto3" json:"coupon_value,omitempty"`
	ExpiredDuration *float64   `protobuf:"fixed64,3,opt,name=expired_duration,json=expiredDuration,proto3,oneof" json:"expired_duration,omitempty"`
	CurrencyId      *uint64    `protobuf:"varint,4,opt,name=currency_id,json=currencyId,proto3,oneof" json:"currency_id,omitempty"`
	UsageLimit      int32      `protobuf:"varint,5,opt,name=usage_limit,json=usageLimit,proto3" json:"usage_limit,omitempty"`
	MilestoneId     uint64     `protobuf:"varint,6,opt,name=milestone_id,json=milestoneId,proto3" json:"milestone_id,omitempty"`
	CouponType      CouponType `protobuf:"varint,7,opt,name=coupon_type,json=couponType,proto3,enum=coupon.CouponType" json:"coupon_type,omitempty"`
	ServiceIds      []uint64   `protobuf:"varint,8,rep,packed,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	mi := &file_coupon_api_coupon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{1}
}

func (x *Reward) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reward) GetCouponValue() float64 {
	if x != nil {
		return x.CouponValue
	}
	return 0
}

func (x *Reward) GetExpiredDuration() float64 {
	if x != nil && x.ExpiredDuration != nil {
		return *x.ExpiredDuration
	}
	return 0
}

func (x *Reward) GetCurrencyId() uint64 {
	if x != nil && x.CurrencyId != nil {
		return *x.CurrencyId
	}
	return 0
}

func (x *Reward) GetUsageLimit() int32 {
	if x != nil {
		return x.UsageLimit
	}
	return 0
}

func (x *Reward) GetMilestoneId() uint64 {
	if x != nil {
		return x.MilestoneId
	}
	return 0
}

func (x *Reward) GetCouponType() CouponType {
	if x != nil {
		return x.CouponType
	}
	return CouponType_COUPON_TYPE_UNKNOWN
}

func (x *Reward) GetServiceIds() []uint64 {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

type Milestone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      MilestoneType `protobuf:"varint,2,opt,name=type,proto3,enum=coupon.MilestoneType" json:"type,omitempty"`
	Threshold *int32        `protobuf:"varint,3,opt,name=threshold,proto3,oneof" json:"threshold,omitempty"`
	Step      *int32        `protobuf:"varint,4,opt,name=step,proto3,oneof" json:"step,omitempty"`
	StoreId   string        `protobuf:"bytes,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Rewards   []*Reward     `protobuf:"bytes,6,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *Milestone) Reset() {
	*x = Milestone{}
	mi := &file_coupon_api_coupon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Milestone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Milestone) ProtoMessage() {}

func (x *Milestone) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Milestone.ProtoReflect.Descriptor instead.
func (*Milestone) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{2}
}

func (x *Milestone) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Milestone) GetType() MilestoneType {
	if x != nil {
		return x.Type
	}
	return MilestoneType_MILESTONE_TYPE_UNKNOWN
}

func (x *Milestone) GetThreshold() int32 {
	if x != nil && x.Threshold != nil {
		return *x.Threshold
	}
	return 0
}

func (x *Milestone) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *Milestone) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *Milestone) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type StoreCoupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	StoreId       string                 `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ExpiredAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expired_at,json=expiredAt,proto3,oneof" json:"expired_at,omitempty"`
	CustomerId    *string                `protobuf:"bytes,5,opt,name=customer_id,json=customerId,proto3,oneof" json:"customer_id,omitempty"`
	ServiceIds    []uint64               `protobuf:"varint,6,rep,packed,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	CurrencyId    *uint64                `protobuf:"varint,7,opt,name=currency_id,json=currencyId,proto3,oneof" json:"currency_id,omitempty"`
	CouponType    CouponType             `protobuf:"varint,8,opt,name=coupon_type,json=couponType,proto3,enum=coupon.CouponType" json:"coupon_type,omitempty"`
	Status        CouponStatus           `protobuf:"varint,9,opt,name=status,proto3,enum=coupon.CouponStatus" json:"status,omitempty"`
	UsageLimit    int32                  `protobuf:"varint,10,opt,name=usage_limit,json=usageLimit,proto3" json:"usage_limit,omitempty"`
	UsedCount     int32                  `protobuf:"varint,11,opt,name=used_count,json=usedCount,proto3" json:"used_count,omitempty"`
	ReservedCount int32                  `protobuf:"varint,12,opt,name=reserved_count,json=reservedCount,proto3" json:"reserved_count,omitempty"`
}

func (x *StoreCoupon) Reset() {
	*x = StoreCoupon{}
	mi := &file_coupon_api_coupon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreCoupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreCoupon) ProtoMessage() {}

func (x *StoreCoupon) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreCoupon.ProtoReflect.Descriptor instead.
func (*StoreCoupon) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{3}
}

func (x *StoreCoupon) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreCoupon) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StoreCoupon) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *StoreCoupon) GetExpiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredAt
	}
	return nil
}

func (x *StoreCoupon) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *StoreCoupon) GetServiceIds() []uint64 {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *StoreCoupon) GetCurrencyId() uint64 {
	if x != nil && x.CurrencyId != nil {
		return *x.CurrencyId
	}
	return 0
}

func (x *StoreCoupon) GetCouponType() CouponType {
	if x != nil {
		return x.CouponType
	}
	return CouponType_COUPON_TYPE_UNKNOWN
}

func (x *StoreCoupon) GetStatus() CouponStatus {
	if x != nil {
		return x.Status
	}
	return CouponStatus_COUPON_STATUS_UNKNOWN
}

func (x *StoreCoupon) GetUsageLimit() int32 {
	if x != nil {
		return x.UsageLimit
	}
	return 0
}

func (x *StoreCoupon) GetUsedCount() int32 {
	if x != nil {
		return x.UsedCount
	}
	return 0
}

func (x *StoreCoupon) GetReservedCount() int32 {
	if x != nil {
		return x.ReservedCount
	}
	return 0
}

type MilestoneProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Milestone *Milestone `protobuf:"bytes,1,opt,name=Milestone,proto3" json:"Milestone,omitempty"`
	Progress  int32      `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *MilestoneProgress) Reset() {
	*x = MilestoneProgress{}
	mi := &file_coupon_api_coupon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MilestoneProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilestoneProgress) ProtoMessage() {}

func (x *MilestoneProgress) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilestoneProgress.ProtoReflect.Descriptor instead.
func (*MilestoneProgress) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{4}
}

func (x *MilestoneProgress) GetMilestone() *Milestone {
	if x != nil {
		return x.Milestone
	}
	return nil
}

func (x *MilestoneProgress) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type CreateMileStoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Threshold *int32                                    `protobuf:"varint,2,opt,name=threshold,proto3,oneof" json:"threshold,omitempty"`
	Step      *int32                                    `protobuf:"varint,3,opt,name=step,proto3,oneof" json:"step,omitempty"`
	Rewards   []*CreateMileStoneRequest_MilestoneReward `protobuf:"bytes,4,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *CreateMileStoneRequest) Reset() {
	*x = CreateMileStoneRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMileStoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMileStoneRequest) ProtoMessage() {}

func (x *CreateMileStoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMileStoneRequest.ProtoReflect.Descriptor instead.
func (*CreateMileStoneRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMileStoneRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMileStoneRequest) GetThreshold() int32 {
	if x != nil && x.Threshold != nil {
		return *x.Threshold
	}
	return 0
}

func (x *CreateMileStoneRequest) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *CreateMileStoneRequest) GetRewards() []*CreateMileStoneRequest_MilestoneReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type CreateMileStoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Milestone *Milestone `protobuf:"bytes,1,opt,name=milestone,proto3" json:"milestone,omitempty"`
}

func (x *CreateMileStoneResponse) Reset() {
	*x = CreateMileStoneResponse{}
	mi := &file_coupon_api_coupon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMileStoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMileStoneResponse) ProtoMessage() {}

func (x *CreateMileStoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMileStoneResponse.ProtoReflect.Descriptor instead.
func (*CreateMileStoneResponse) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{6}
}

func (x *CreateMileStoneResponse) GetMilestone() *Milestone {
	if x != nil {
		return x.Milestone
	}
	return nil
}

type GetMileStoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMileStoneRequest) Reset() {
	*x = GetMileStoneRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMileStoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMileStoneRequest) ProtoMessage() {}

func (x *GetMileStoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMileStoneRequest.ProtoReflect.Descriptor instead.
func (*GetMileStoneRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{7}
}

func (x *GetMileStoneRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMileStoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Milestone *Milestone `protobuf:"bytes,1,opt,name=milestone,proto3" json:"milestone,omitempty"`
}

func (x *GetMileStoneResponse) Reset() {
	*x = GetMileStoneResponse{}
	mi := &file_coupon_api_coupon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMileStoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMileStoneResponse) ProtoMessage() {}

func (x *GetMileStoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMileStoneResponse.ProtoReflect.Descriptor instead.
func (*GetMileStoneResponse) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{8}
}

func (x *GetMileStoneResponse) GetMilestone() *Milestone {
	if x != nil {
		return x.Milestone
	}
	return nil
}

type ListMileStoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIndex   int32         `protobuf:"varint,1,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	PageSize    int32         `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortMethods []*SortMethod `protobuf:"bytes,3,rep,name=sort_methods,json=sortMethods,proto3" json:"sort_methods,omitempty"`
}

func (x *ListMileStoneRequest) Reset() {
	*x = ListMileStoneRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMileStoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMileStoneRequest) ProtoMessage() {}

func (x *ListMileStoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMileStoneRequest.ProtoReflect.Descriptor instead.
func (*ListMileStoneRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{9}
}

func (x *ListMileStoneRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ListMileStoneRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMileStoneRequest) GetSortMethods() []*SortMethod {
	if x != nil {
		return x.SortMethods
	}
	return nil
}

type ListMileStoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Milestones []*Milestone          `protobuf:"bytes,1,rep,name=milestones,proto3" json:"milestones,omitempty"`
	TotalCount int32                 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalPages int32                 `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	Request    *ListMileStoneRequest `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ListMileStoneResponse) Reset() {
	*x = ListMileStoneResponse{}
	mi := &file_coupon_api_coupon_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMileStoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMileStoneResponse) ProtoMessage() {}

func (x *ListMileStoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMileStoneResponse.ProtoReflect.Descriptor instead.
func (*ListMileStoneResponse) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{10}
}

func (x *ListMileStoneResponse) GetMilestones() []*Milestone {
	if x != nil {
		return x.Milestones
	}
	return nil
}

func (x *ListMileStoneResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListMileStoneResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *ListMileStoneResponse) GetRequest() *ListMileStoneRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type DeleteMileStoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteMileStoneRequest) Reset() {
	*x = DeleteMileStoneRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMileStoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMileStoneRequest) ProtoMessage() {}

func (x *DeleteMileStoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMileStoneRequest.ProtoReflect.Descriptor instead.
func (*DeleteMileStoneRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMileStoneRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ReserveCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	BookingId  string   `protobuf:"bytes,2,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	ServiceIds []string `protobuf:"bytes,3,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	CustomerId string   `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	StoreId    string   `protobuf:"bytes,6,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *ReserveCouponRequest) Reset() {
	*x = ReserveCouponRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveCouponRequest) ProtoMessage() {}

func (x *ReserveCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveCouponRequest.ProtoReflect.Descriptor instead.
func (*ReserveCouponRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{12}
}

func (x *ReserveCouponRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReserveCouponRequest) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

func (x *ReserveCouponRequest) GetServiceIds() []string {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *ReserveCouponRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ReserveCouponRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type UnReserveCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingId string `protobuf:"bytes,1,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	StoreId   string `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *UnReserveCouponRequest) Reset() {
	*x = UnReserveCouponRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnReserveCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnReserveCouponRequest) ProtoMessage() {}

func (x *UnReserveCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnReserveCouponRequest.ProtoReflect.Descriptor instead.
func (*UnReserveCouponRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{13}
}

func (x *UnReserveCouponRequest) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

func (x *UnReserveCouponRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type ConfirmCouponUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingId string `protobuf:"bytes,1,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	StoreId   string `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
}

func (x *ConfirmCouponUsageRequest) Reset() {
	*x = ConfirmCouponUsageRequest{}
	mi := &file_coupon_api_coupon_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmCouponUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmCouponUsageRequest) ProtoMessage() {}

func (x *ConfirmCouponUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmCouponUsageRequest.ProtoReflect.Descriptor instead.
func (*ConfirmCouponUsageRequest) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{14}
}

func (x *ConfirmCouponUsageRequest) GetBookingId() string {
	if x != nil {
		return x.BookingId
	}
	return ""
}

func (x *ConfirmCouponUsageRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type CreateMileStoneRequest_MilestoneReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponValue     float64  `protobuf:"fixed64,1,opt,name=coupon_value,json=couponValue,proto3" json:"coupon_value,omitempty"`
	ExpiredDuration *float64 `protobuf:"fixed64,2,opt,name=expired_duration,json=expiredDuration,proto3,oneof" json:"expired_duration,omitempty"`
	CurrencyId      *uint64  `protobuf:"varint,3,opt,name=currency_id,json=currencyId,proto3,oneof" json:"currency_id,omitempty"`
	UsageLimit      *int32   `protobuf:"varint,4,opt,name=usage_limit,json=usageLimit,proto3,oneof" json:"usage_limit,omitempty"`
	MilestoneId     uint64   `protobuf:"varint,5,opt,name=milestone_id,json=milestoneId,proto3" json:"milestone_id,omitempty"`
	ServiceIds      []uint64 `protobuf:"varint,6,rep,packed,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
}

func (x *CreateMileStoneRequest_MilestoneReward) Reset() {
	*x = CreateMileStoneRequest_MilestoneReward{}
	mi := &file_coupon_api_coupon_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMileStoneRequest_MilestoneReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMileStoneRequest_MilestoneReward) ProtoMessage() {}

func (x *CreateMileStoneRequest_MilestoneReward) ProtoReflect() protoreflect.Message {
	mi := &file_coupon_api_coupon_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMileStoneRequest_MilestoneReward.ProtoReflect.Descriptor instead.
func (*CreateMileStoneRequest_MilestoneReward) Descriptor() ([]byte, []int) {
	return file_coupon_api_coupon_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CreateMileStoneRequest_MilestoneReward) GetCouponValue() float64 {
	if x != nil {
		return x.CouponValue
	}
	return 0
}

func (x *CreateMileStoneRequest_MilestoneReward) GetExpiredDuration() float64 {
	if x != nil && x.ExpiredDuration != nil {
		return *x.ExpiredDuration
	}
	return 0
}

func (x *CreateMileStoneRequest_MilestoneReward) GetCurrencyId() uint64 {
	if x != nil && x.CurrencyId != nil {
		return *x.CurrencyId
	}
	return 0
}

func (x *CreateMileStoneRequest_MilestoneReward) GetUsageLimit() int32 {
	if x != nil && x.UsageLimit != nil {
		return *x.UsageLimit
	}
	return 0
}

func (x *CreateMileStoneRequest_MilestoneReward) GetMilestoneId() uint64 {
	if x != nil {
		return x.MilestoneId
	}
	return 0
}

func (x *CreateMileStoneRequest_MilestoneReward) GetServiceIds() []uint64 {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

var File_coupon_api_coupon_proto protoreflect.FileDescriptor

var file_coupon_api_coupon_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x00, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x09, 0x4d,
	0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e,
	0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x22, 0xf2, 0x03, 0x0a, 0x0b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x22, 0x60, 0x0a, 0x11, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xfe, 0x03, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x1a, 0xa9, 0x02, 0x0a, 0x0f, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73,
	0x74, 0x65, 0x70, 0x22, 0x4a, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x22,
	0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x22,
	0x9b, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x24, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x52, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0xc4, 0x01,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x0a,
	0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0xaf, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x55, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x2a, 0x70, 0x0a,
	0x10, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x02, 0x2a,
	0x48, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x2a, 0x58, 0x0a, 0x0a, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x50, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x45, 0x52, 0x43, 0x45, 0x4e, 0x54, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x92, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55,
	0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x49,
	0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x63, 0x0a, 0x0d, 0x4d, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x49, 0x4c,
	0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x49, 0x4c, 0x45, 0x53, 0x54, 0x4f,
	0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1c, 0x0a, 0x18, 0x4d, 0x49, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x43, 0x55, 0x52, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x32, 0x08, 0x0a,
	0x06, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x32, 0xdf, 0x02, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6d, 0x73, 0x12, 0x73, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x63, 0x6d, 0x73,
	0x2f, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x63, 0x6d, 0x73, 0x2f, 0x6d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x71, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x63, 0x6d, 0x73, 0x2f, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x32, 0xd8, 0x02, 0x0a, 0x0e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x64, 0x0a, 0x0d,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1c, 0x2e,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12,
	0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x69, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x55, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x55,
	0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x69, 0x6e, 0x74, 0x2f, 0x75, 0x6e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x74,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x63, 0x6d, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x2d, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x69, 0x73, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coupon_api_coupon_proto_rawDescOnce sync.Once
	file_coupon_api_coupon_proto_rawDescData = file_coupon_api_coupon_proto_rawDesc
)

func file_coupon_api_coupon_proto_rawDescGZIP() []byte {
	file_coupon_api_coupon_proto_rawDescOnce.Do(func() {
		file_coupon_api_coupon_proto_rawDescData = protoimpl.X.CompressGZIP(file_coupon_api_coupon_proto_rawDescData)
	})
	return file_coupon_api_coupon_proto_rawDescData
}

var file_coupon_api_coupon_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_coupon_api_coupon_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_coupon_api_coupon_proto_goTypes = []any{
	(CouponUsedStatus)(0),                          // 0: coupon.CouponUsedStatus
	(SortType)(0),                                  // 1: coupon.SortType
	(CouponType)(0),                                // 2: coupon.CouponType
	(CouponStatus)(0),                              // 3: coupon.CouponStatus
	(MilestoneType)(0),                             // 4: coupon.MilestoneType
	(*SortMethod)(nil),                             // 5: coupon.SortMethod
	(*Reward)(nil),                                 // 6: coupon.Reward
	(*Milestone)(nil),                              // 7: coupon.Milestone
	(*StoreCoupon)(nil),                            // 8: coupon.StoreCoupon
	(*MilestoneProgress)(nil),                      // 9: coupon.MilestoneProgress
	(*CreateMileStoneRequest)(nil),                 // 10: coupon.CreateMileStoneRequest
	(*CreateMileStoneResponse)(nil),                // 11: coupon.CreateMileStoneResponse
	(*GetMileStoneRequest)(nil),                    // 12: coupon.GetMileStoneRequest
	(*GetMileStoneResponse)(nil),                   // 13: coupon.GetMileStoneResponse
	(*ListMileStoneRequest)(nil),                   // 14: coupon.ListMileStoneRequest
	(*ListMileStoneResponse)(nil),                  // 15: coupon.ListMileStoneResponse
	(*DeleteMileStoneRequest)(nil),                 // 16: coupon.DeleteMileStoneRequest
	(*ReserveCouponRequest)(nil),                   // 17: coupon.ReserveCouponRequest
	(*UnReserveCouponRequest)(nil),                 // 18: coupon.UnReserveCouponRequest
	(*ConfirmCouponUsageRequest)(nil),              // 19: coupon.ConfirmCouponUsageRequest
	(*CreateMileStoneRequest_MilestoneReward)(nil), // 20: coupon.CreateMileStoneRequest.MilestoneReward
	(*timestamppb.Timestamp)(nil),                  // 21: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 22: google.protobuf.Empty
}
var file_coupon_api_coupon_proto_depIdxs = []int32{
	1,  // 0: coupon.SortMethod.type:type_name -> coupon.SortType
	2,  // 1: coupon.Reward.coupon_type:type_name -> coupon.CouponType
	4,  // 2: coupon.Milestone.type:type_name -> coupon.MilestoneType
	6,  // 3: coupon.Milestone.rewards:type_name -> coupon.Reward
	21, // 4: coupon.StoreCoupon.expired_at:type_name -> google.protobuf.Timestamp
	2,  // 5: coupon.StoreCoupon.coupon_type:type_name -> coupon.CouponType
	3,  // 6: coupon.StoreCoupon.status:type_name -> coupon.CouponStatus
	7,  // 7: coupon.MilestoneProgress.Milestone:type_name -> coupon.Milestone
	20, // 8: coupon.CreateMileStoneRequest.rewards:type_name -> coupon.CreateMileStoneRequest.MilestoneReward
	7,  // 9: coupon.CreateMileStoneResponse.milestone:type_name -> coupon.Milestone
	7,  // 10: coupon.GetMileStoneResponse.milestone:type_name -> coupon.Milestone
	5,  // 11: coupon.ListMileStoneRequest.sort_methods:type_name -> coupon.SortMethod
	7,  // 12: coupon.ListMileStoneResponse.milestones:type_name -> coupon.Milestone
	14, // 13: coupon.ListMileStoneResponse.request:type_name -> coupon.ListMileStoneRequest
	10, // 14: coupon.CouponCms.CreateMileStone:input_type -> coupon.CreateMileStoneRequest
	14, // 15: coupon.CouponCms.ListMileStone:input_type -> coupon.ListMileStoneRequest
	16, // 16: coupon.CouponCms.DeleteMileStone:input_type -> coupon.DeleteMileStoneRequest
	17, // 17: coupon.CouponInternal.ReserveCoupon:input_type -> coupon.ReserveCouponRequest
	18, // 18: coupon.CouponInternal.UnReserveCoupon:input_type -> coupon.UnReserveCouponRequest
	19, // 19: coupon.CouponInternal.ConfirmCouponUsage:input_type -> coupon.ConfirmCouponUsageRequest
	11, // 20: coupon.CouponCms.CreateMileStone:output_type -> coupon.CreateMileStoneResponse
	15, // 21: coupon.CouponCms.ListMileStone:output_type -> coupon.ListMileStoneResponse
	22, // 22: coupon.CouponCms.DeleteMileStone:output_type -> google.protobuf.Empty
	22, // 23: coupon.CouponInternal.ReserveCoupon:output_type -> google.protobuf.Empty
	22, // 24: coupon.CouponInternal.UnReserveCoupon:output_type -> google.protobuf.Empty
	22, // 25: coupon.CouponInternal.ConfirmCouponUsage:output_type -> google.protobuf.Empty
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_coupon_api_coupon_proto_init() }
func file_coupon_api_coupon_proto_init() {
	if File_coupon_api_coupon_proto != nil {
		return
	}
	file_coupon_api_coupon_proto_msgTypes[1].OneofWrappers = []any{}
	file_coupon_api_coupon_proto_msgTypes[2].OneofWrappers = []any{}
	file_coupon_api_coupon_proto_msgTypes[3].OneofWrappers = []any{}
	file_coupon_api_coupon_proto_msgTypes[5].OneofWrappers = []any{}
	file_coupon_api_coupon_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coupon_api_coupon_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_coupon_api_coupon_proto_goTypes,
		DependencyIndexes: file_coupon_api_coupon_proto_depIdxs,
		EnumInfos:         file_coupon_api_coupon_proto_enumTypes,
		MessageInfos:      file_coupon_api_coupon_proto_msgTypes,
	}.Build()
	File_coupon_api_coupon_proto = out.File
	file_coupon_api_coupon_proto_rawDesc = nil
	file_coupon_api_coupon_proto_goTypes = nil
	file_coupon_api_coupon_proto_depIdxs = nil
}
