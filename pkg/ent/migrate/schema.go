// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CouponsColumns holds the columns for the "coupons" table.
	CouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeFloat64, Default: 0},
		{Name: "store_id", Type: field.TypeString},
		{Name: "expire_at", Type: field.TypeTime, Nullable: true},
		{Name: "customer_id", Type: field.TypeString, Nullable: true},
		{Name: "service_ids", Type: field.TypeJSON},
		{Name: "type", Type: field.TypeInt32},
		{Name: "usage_limit", Type: field.TypeInt32, Default: 1},
		{Name: "used_count", Type: field.TypeInt32, Default: 0},
		{Name: "status", Type: field.TypeInt32},
		{Name: "reserved_count", Type: field.TypeInt32, Default: 0},
		{Name: "currency_id", Type: field.TypeUint64, Nullable: true},
	}
	// CouponsTable holds the schema information for the "coupons" table.
	CouponsTable = &schema.Table{
		Name:       "coupons",
		Columns:    CouponsColumns,
		PrimaryKey: []*schema.Column{CouponsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "coupons_currencies_coupons",
				Columns:    []*schema.Column{CouponsColumns[14]},
				RefColumns: []*schema.Column{CurrenciesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CurrenciesColumns holds the columns for the "currencies" table.
	CurrenciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
	}
	// CurrenciesTable holds the schema information for the "currencies" table.
	CurrenciesTable = &schema.Table{
		Name:       "currencies",
		Columns:    CurrenciesColumns,
		PrimaryKey: []*schema.Column{CurrenciesColumns[0]},
	}
	// MilestonesColumns holds the columns for the "milestones" table.
	MilestonesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "store_id", Type: field.TypeString},
		{Name: "milestone_type", Type: field.TypeInt32},
		{Name: "threshold", Type: field.TypeInt32, Default: 0},
		{Name: "step", Type: field.TypeInt32, Default: 0},
	}
	// MilestonesTable holds the schema information for the "milestones" table.
	MilestonesTable = &schema.Table{
		Name:       "milestones",
		Columns:    MilestonesColumns,
		PrimaryKey: []*schema.Column{MilestonesColumns[0]},
	}
	// ProgressesColumns holds the columns for the "progresses" table.
	ProgressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "customer_id", Type: field.TypeString},
		{Name: "progress", Type: field.TypeInt32, Default: 0},
		{Name: "pass_count", Type: field.TypeInt32, Default: 0},
		{Name: "milestone_id", Type: field.TypeUint64},
	}
	// ProgressesTable holds the schema information for the "progresses" table.
	ProgressesTable = &schema.Table{
		Name:       "progresses",
		Columns:    ProgressesColumns,
		PrimaryKey: []*schema.Column{ProgressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "progresses_milestones_progress",
				Columns:    []*schema.Column{ProgressesColumns[6]},
				RefColumns: []*schema.Column{MilestonesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RewardsColumns holds the columns for the "rewards" table.
	RewardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "expired_duration", Type: field.TypeFloat64, Nullable: true},
		{Name: "service_ids", Type: field.TypeJSON},
		{Name: "coupon_type", Type: field.TypeInt32},
		{Name: "usage_limit", Type: field.TypeInt32, Default: 1},
		{Name: "coupon_value", Type: field.TypeFloat64, Default: 0},
		{Name: "currency_id", Type: field.TypeUint64, Nullable: true},
		{Name: "milestone_id", Type: field.TypeUint64},
	}
	// RewardsTable holds the schema information for the "rewards" table.
	RewardsTable = &schema.Table{
		Name:       "rewards",
		Columns:    RewardsColumns,
		PrimaryKey: []*schema.Column{RewardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rewards_currencies_reward",
				Columns:    []*schema.Column{RewardsColumns[8]},
				RefColumns: []*schema.Column{CurrenciesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rewards_milestones_reward",
				Columns:    []*schema.Column{RewardsColumns[9]},
				RefColumns: []*schema.Column{MilestonesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CouponsTable,
		CurrenciesTable,
		MilestonesTable,
		ProgressesTable,
		RewardsTable,
	}
)

func init() {
	CouponsTable.ForeignKeys[0].RefTable = CurrenciesTable
	ProgressesTable.ForeignKeys[0].RefTable = MilestonesTable
	RewardsTable.ForeignKeys[0].RefTable = CurrenciesTable
	RewardsTable.ForeignKeys[1].RefTable = MilestonesTable
}
